<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.keelin.mapper.ImportantIncidentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.keelin.model.ImportantIncidentInfo" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="prov_name" property="provName" jdbcType="VARCHAR" />
    <result column="prov_code" property="provCode" jdbcType="VARCHAR" />
    <result column="incident_type" property="incidentType" jdbcType="INTEGER" />
    <result column="incident_desc" property="incidentDesc" jdbcType="VARCHAR" />
    <result column="communica_impact_degree" property="communicaImpactDegree" jdbcType="VARCHAR" />
    <result column="incident_reason" property="incidentReason" jdbcType="VARCHAR" />
    <result column="communica_safeguard_desc" property="communicaSafeguardDesc" jdbcType="VARCHAR" />
    <result column="duty_ensure" property="dutyEnsure" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="crt_date" property="crtDate" jdbcType="TIMESTAMP" />
    <result column="op_date" property="opDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, prov_name, prov_code, incident_type, incident_desc, communica_impact_degree, 
    incident_reason, communica_safeguard_desc, duty_ensure, is_delete, crt_date, op_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.keelin.model.ImportantIncidentInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from important_incident_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.keelin.model.ImportantIncidentInfoExample" >
    delete from important_incident_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.keelin.model.ImportantIncidentInfo" >
    insert into important_incident_info (id, prov_name, prov_code, 
      incident_type, incident_desc, communica_impact_degree, 
      incident_reason, communica_safeguard_desc, 
      duty_ensure, is_delete, crt_date, 
      op_date)
    values (#{id,jdbcType=BIGINT}, #{provName,jdbcType=VARCHAR}, #{provCode,jdbcType=VARCHAR}, 
      #{incidentType,jdbcType=INTEGER}, #{incidentDesc,jdbcType=VARCHAR}, #{communicaImpactDegree,jdbcType=VARCHAR}, 
      #{incidentReason,jdbcType=VARCHAR}, #{communicaSafeguardDesc,jdbcType=VARCHAR}, 
      #{dutyEnsure,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{crtDate,jdbcType=TIMESTAMP}, 
      #{opDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.keelin.model.ImportantIncidentInfo" >
    insert into important_incident_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="provName != null" >
        prov_name,
      </if>
      <if test="provCode != null" >
        prov_code,
      </if>
      <if test="incidentType != null" >
        incident_type,
      </if>
      <if test="incidentDesc != null" >
        incident_desc,
      </if>
      <if test="communicaImpactDegree != null" >
        communica_impact_degree,
      </if>
      <if test="incidentReason != null" >
        incident_reason,
      </if>
      <if test="communicaSafeguardDesc != null" >
        communica_safeguard_desc,
      </if>
      <if test="dutyEnsure != null" >
        duty_ensure,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="crtDate != null" >
        crt_date,
      </if>
      <if test="opDate != null" >
        op_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="provName != null" >
        #{provName,jdbcType=VARCHAR},
      </if>
      <if test="provCode != null" >
        #{provCode,jdbcType=VARCHAR},
      </if>
      <if test="incidentType != null" >
        #{incidentType,jdbcType=INTEGER},
      </if>
      <if test="incidentDesc != null" >
        #{incidentDesc,jdbcType=VARCHAR},
      </if>
      <if test="communicaImpactDegree != null" >
        #{communicaImpactDegree,jdbcType=VARCHAR},
      </if>
      <if test="incidentReason != null" >
        #{incidentReason,jdbcType=VARCHAR},
      </if>
      <if test="communicaSafeguardDesc != null" >
        #{communicaSafeguardDesc,jdbcType=VARCHAR},
      </if>
      <if test="dutyEnsure != null" >
        #{dutyEnsure,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="crtDate != null" >
        #{crtDate,jdbcType=TIMESTAMP},
      </if>
      <if test="opDate != null" >
        #{opDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.keelin.model.ImportantIncidentInfoExample" resultType="java.lang.Integer" >
    select count(*) from important_incident_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update important_incident_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.provName != null" >
        prov_name = #{record.provName,jdbcType=VARCHAR},
      </if>
      <if test="record.provCode != null" >
        prov_code = #{record.provCode,jdbcType=VARCHAR},
      </if>
      <if test="record.incidentType != null" >
        incident_type = #{record.incidentType,jdbcType=INTEGER},
      </if>
      <if test="record.incidentDesc != null" >
        incident_desc = #{record.incidentDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.communicaImpactDegree != null" >
        communica_impact_degree = #{record.communicaImpactDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.incidentReason != null" >
        incident_reason = #{record.incidentReason,jdbcType=VARCHAR},
      </if>
      <if test="record.communicaSafeguardDesc != null" >
        communica_safeguard_desc = #{record.communicaSafeguardDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.dutyEnsure != null" >
        duty_ensure = #{record.dutyEnsure,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.crtDate != null" >
        crt_date = #{record.crtDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.opDate != null" >
        op_date = #{record.opDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update important_incident_info
    set id = #{record.id,jdbcType=BIGINT},
      prov_name = #{record.provName,jdbcType=VARCHAR},
      prov_code = #{record.provCode,jdbcType=VARCHAR},
      incident_type = #{record.incidentType,jdbcType=INTEGER},
      incident_desc = #{record.incidentDesc,jdbcType=VARCHAR},
      communica_impact_degree = #{record.communicaImpactDegree,jdbcType=VARCHAR},
      incident_reason = #{record.incidentReason,jdbcType=VARCHAR},
      communica_safeguard_desc = #{record.communicaSafeguardDesc,jdbcType=VARCHAR},
      duty_ensure = #{record.dutyEnsure,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      crt_date = #{record.crtDate,jdbcType=TIMESTAMP},
      op_date = #{record.opDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>